name: Email Automation Scheduler

on:
  schedule:
    # Runs every 15 minutes (adjust to your preference)
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  run-email-agent:
    runs-on: ubuntu-latest

    services:
      ollama_service:
        image: ollama/ollama:latest
        ports:
          - 11434:11434
        # ✅ Safe single-line options using folded scalar (>-) to avoid newline bugs
        options: >-
          --name ollama_service
          --health-cmd="ollama -v"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
      LLM_MODEL: mistral:instruct
      OLLAMA_MODEL: mistral:instruct
      IMAP_SERVER: imap.gmail.com
      SMTP_SERVER: smtp.gmail.com

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache Ollama models
        uses: actions/cache@v4
        with:
          path: ~/.ollama/models
          key: ollama-models-${{ env.LLM_MODEL }}

      - name: Install dependencies
        run: |
          pip install requests imapclient

      - name: Pull and preload Ollama model
        run: |
          echo "Waiting for Ollama service to start..."
          for i in {1..10}; do
            if docker exec ollama_service which ollama >/dev/null 2>&1; then
              echo "Ollama service is ready!"
              break
            else
              echo "Waiting for Ollama to initialize... ($i/10)"
              sleep 5
            fi
          done

          echo "Pulling model ${LLM_MODEL}..."
          if ! docker exec ollama_service ollama pull ${LLM_MODEL}; then
            echo "Model pull failed — retrying once after 15s..."
            sleep 15
            docker exec ollama_service ollama pull ${LLM_MODEL}
          fi

          echo "Preloading model to warm up..."
          docker exec ollama_service ollama run ${LLM_MODEL} --prompt "Ready" || true

      - name: Run Email Agent
        run: |
          echo "Starting email agent..."
          python email_agent.py
