name: Email Automation Scheduler

on:
  schedule:
    # Runs every 15 minutes to allow more time for the larger model setup
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  run-email-agent:
    runs-on: ubuntu-latest
    timeout-minutes: 45 # Increased timeout for model download and setup

    env:
      # --- General Email Secrets ---
      EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      IMAP_SERVER: imap.gmail.com
      SMTP_SERVER: smtp.gmail.com
      PYTHONUNBUFFERED: 1

      # --- For AirLLM/Hugging Face to cache models ---
      HF_HOME: /home/runner/.cache/huggingface

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Clear Caches
        uses: actions/github-script@v6
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              if (cache.key.startsWith('Linux-huggingface-models-') || cache.key.startsWith('Linux-pip-')) {
                await github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                })
              }
            }
          
      - name: Install Dependencies from requirements.txt
        run: |
          pip install --upgrade pip
          # First, install the CPU version of PyTorch
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
          # Then, install all other packages from the requirements file
          pip install -r requirements.txt

      - name: Verify Installation
        run: |
          echo "--- Verifying installed packages ---"
          pip list
          echo "------------------------------------"
          echo "Checking for 'optimum' package..."
          pip show optimum
          echo "------------------------------------"

      - name: Run Email Agent with AirLLM
        run: |
          echo "Starting Email Automation with AirLLM..."
          python email_agent.py
